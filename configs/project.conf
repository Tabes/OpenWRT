#!/bin/bash
################################################################################
### OpenWRT Config & Builder - OpenWRT Configuration
### Central configuration file for OpenWRT and custom Image Builder
### Combines project settings, paths, and workflow management
################################################################################
### Project: OpenWRT Config & Custom Image Builder
### Version: 1.0.0
### Author:  Mawage (OpenWRT Builder Team)
### Date:    2025-08-20
### License: MIT
### Usage:   Source this File to load Project Configuration
################################################################################

SCRIPT_VERSION="1.0.0"
COMMIT="Central project configuration for OpenWRT Builder"


################################################################################
### === GENERAL PROJECT SETTINGS === ###
################################################################################

PROJECT_NAME="OpenWRT"
PROJECT_DESCRIPTION="Custom OpenWRT Config & Image Builder"
PROJECT_VERSION="1.1.0"
PROJECT_AUTHOR="Mawage (OpenWRT Config & Builder Team)"
PROJECT_EMAIL="tabes@mawage.de"
PROJECT_COPYRIGHT="Mawage (Hosting & Concepts)"
PROJECT_LICENSE="MIT"
PROJECT_WEBSITE="https://github.com/Tabes/OpenWRT"


################################################################################
### === PATH VARIABLES === ###
################################################################################

### Base Project Directories ###
PROJECT_ROOT="/opt/openWRT"
CONFIGS_DIR="$PROJECT_ROOT/configs"
BUILDER_DIR="$PROJECT_ROOT/builder"
SCRIPTS_DIR="$PROJECT_ROOT/scripts"
WORKFLOW_DIR="$PROJECT_ROOT/utilities"
DOCS_DIR="$PROJECT_ROOT/docs"

LOG_DIR="$PROJECT_ROOT/logs"
WORK_DIR="$PROJECT_ROOT/work"
CACHE_DIR="$WORK_DIR/cache"

HELPER_SCRIPT="$SCRIPTS_DIR/helper.sh"

### Subproject (Builder) specific Paths ###
BUILDER_CONFIG_DIR="$BUILDER_DIR/config"
BUILDER_SCRIPTS_DIR="$BUILDER_DIR/scripts"
BUILDER_BOOT_DIR="$BUILDER_DIR/boot"
BUILDER_LOG_DIR="$BUILDER_DIR/log"
BUILDER_OUTPUT_DIR="$BUILDER_DIR/output"
BUILDER_WORK_DIR="$BUILDER_DIR/work"
BUILDER_CACHE_DIR="$BUILDER_DIR/cache"

### Key files ###
PROJECT_CONFIG="$CONFIGS_DIR/project.conf"
BUILDER_CONFIG="$BUILDER_CONFIG_DIR/builder.cfg"
MAIN_BUILD_SCRIPT="$BUILDER_DIR/build.sh"
START_SCRIPT="$PROJECT_ROOT/start.sh"


################################################################################
### === GIT REPOSITORY MANAGEMENT === ###
################################################################################

### Workflow scripts ###
GITCLONE_SCRIPT="$WORKFLOW_DIR/gitclone.sh"
GIT_MANAGER_SCRIPT="$WORKFLOW_DIR/gitmanage.sh"
WORKFLOW_SCRIPT="$WORKFLOW_DIR/gitwork.sh"

### Git repository settings ###
REPO_URL="https://github.com/Tabes/OpenWRT.git"
REPO_BRANCH="main"
REPO_DEVELOP_BRANCH="develop"
REPO_REMOTE_NAME="origin"

### Branch naming conventions ###
FEATURE_BRANCH_PREFIX="feature/"
HOTFIX_BRANCH_PREFIX="hotfix/"
RELEASE_BRANCH_PREFIX="release/"

### Git user settings ###
GIT_USER_NAME="$PROJECT_AUTHOR"
GIT_USER_EMAIL="$PROJECT_EMAIL"


################################################################################
### === VERSION MANAGEMENT === ###
################################################################################

### Versioning settings ###
VERSION_PREFIX="v"
VERSION_FORMAT="MAJOR.MINOR.PATCH"
VERSION_SCHEME="semantic"

### Auto update behavior ###
AUTO_UPDATE_ENABLED="true"
AUTO_UPDATE_GITCLONE="true"
AUTO_UPDATE_BUILDER="false"
CHECK_UPDATE_INTERVAL="300"

### Commit message settings ###
DEFAULT_COMMIT_PREFIX="[AUTO]"
FEATURE_COMMIT_PREFIX="[FEATURE]"
BUGFIX_COMMIT_PREFIX="[BUGFIX]"
RELEASE_COMMIT_PREFIX="[RELEASE]"


################################################################################
### === BUILD SYSTEM CONFIGURATION === ###
################################################################################

### OpenWRT build settings ###
OPENWRT_VERSION="23.05"
TARGET_ARCHITECTURE="arm64"
TARGET_DEVICE="bananapi_bpi-r4"
BUILD_VARIANT="luci"

### Build directories ###
BUILD_WORKERS="4"
BUILD_VERBOSE="false"
BUILD_CLEAN_ON_START="true"
BUILD_CACHE_ENABLED="true"

### Package settings ###
DEFAULT_PACKAGES="luci luci-ssl nginx"
EXTRA_PACKAGES=""
EXCLUDED_PACKAGES=""


################################################################################
### === IMAGE CONFIGURATION === ###
################################################################################

### Image output settings ###
IMAGE_NAME_PREFIX="openwrt-custom"
IMAGE_NAME_SUFFIX=""
IMAGE_COMPRESSION="gz"
IMAGE_KEEP_COUNT="5"

### Media settings ###
SUPPORTED_MEDIA_TYPES="usb sd emmc"
DEFAULT_MEDIA_SIZE="8G"
VERIFY_MEDIA_WRITE="true"

################################################################################
### === LOGGING AND MONITORING === ###
################################################################################

### Log settings ###
LOG_LEVEL="INFO"
LOG_FORMAT="timestamp"
LOG_ROTATION="true"
LOG_MAX_SIZE="100M"
LOG_MAX_FILES="10"

### Build logging ###
BUILD_LOG_ENABLED="true"
BUILD_LOG_VERBOSE="true"
BUILD_LOG_ERRORS_ONLY="false"


################################################################################
### === NETWORK AND DOWNLOAD === ###
################################################################################

### Download settings ###
DOWNLOAD_TIMEOUT="300"
DOWNLOAD_RETRIES="3"
DOWNLOAD_CACHE_ENABLED="true"
DOWNLOAD_PARALLEL="true"

### Mirror settings ###
OPENWRT_MIRROR="https://downloads.openwrt.org"
PACKAGES_MIRROR="https://downloads.openwrt.org/packages"


################################################################################
### === VALIDATION AND CHECKS === ###
################################################################################

### Required directories ###
REQUIRED_DIRS=(
    "$CONFIGS_DIR"
    "$BUILDER_DIR" 
    "$BUILDER_CONFIG_DIR"
    "$BUILDER_SCRIPTS_DIR"
    "$BUILDER_LOG_DIR"
    "$BUILDER_OUTPUT_DIR"
    "$WORKFLOW_DIR"
    "$SCRIPTS_DIR"
)

### Required files ###
REQUIRED_FILES=(
    "$MAIN_BUILD_SCRIPT"
    "$GITCLONE_SCRIPT"
    "$GIT_MANAGER_SCRIPT"
    "$WORKFLOW_SCRIPT"
)

### System requirements ###
REQUIRED_COMMANDS=(
    "git"
    "curl"
    "wget"
    "make"
    "gcc"
    "python3"
)

### Minimum disk space (in MB) ###
MIN_DISK_SPACE="5000"
MIN_MEMORY="2000"


################################################################################
### === RUNTIME CONFIGURATION === ###
################################################################################

### Execution settings ###
SCRIPT_TIMEOUT="3600"
MAX_PARALLEL_JOBS="4"
ENABLE_DEBUG_MODE="false"
VERBOSE_OUTPUT="false"

### Security settings ###
REQUIRE_ROOT="true"
ALLOW_UNSAFE_OPERATIONS="false"
VALIDATE_CHECKSUMS="true"


################################################################################
### === INITIALIZATION === ###
################################################################################

### Load project configuration ###
if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    echo "Project: $PROJECT_NAME v$PROJECT_VERSION"
    echo "Author:  $PROJECT_AUTHOR <$PROJECT_EMAIL>"
    echo "Root:    $PROJECT_ROOT"
    echo "Repository: $REPO_URL"
    echo ""
    echo "Key Paths:"
    echo "  Builder:  $BUILDER_DIR"
    echo "  Configs:  $CONFIGS_DIR" 
    echo "  Workflow: $WORKFLOW_DIR"
    echo "  Scripts:  $SCRIPTS_DIR"
else
    ### Configuration loaded successfully ###
    export PROJECT_CONFIG_LOADED="true"
    export PROJECT_CONFIG_VERSION="$SCRIPT_VERSION"
fi
